┌ Info: 2024-10-27 14:13:08 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 14:13:10 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 14:13:17 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 14:13:17 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Error: 2024-10-27 14:13:52 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 14:14:02 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 14:14:56 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 14:16:15 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 14:16:16 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 14:16:25 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 14:16:25 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Error: 2024-10-27 14:17:01 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 14:17:49 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 14:17:52 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 14:18:53 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Error: 2024-10-27 14:18:56 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 14:19:14 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 14:19:18 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 17:02:23 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 17:07:14 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 17:07:17 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 17:07:45 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 17:07:45 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Error: 2024-10-27 17:08:43 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 17:09:57 Failed to revise C:\Users\renil\TCC\ForestInventory\app.jl
│   exception = Revise.ReviseEvalException("C:\\Users\\renil\\TCC\\ForestInventory\\app.jl:346", UndefVarError(:selected_dataset, Main), Any[(top-level scope at app.jl:346, 1)])
└ @ Revise C:\Users\renil\.julia\packages\Revise\8jqWV\src\packagedef.jl:733
┌ Warning: 2024-10-27 17:09:58 The running code does not match the saved version for the following files:
│ 
│   C:\Users\renil\TCC\ForestInventory\app.jl
│ 
│ If the error was due to evaluation order, it can sometimes be resolved by calling `Revise.retry()`.
│ Use Revise.errors() to report errors again. Only the first error in each file is shown.
│ Your prompt color may be yellow until the errors are resolved.
└ @ Revise C:\Users\renil\.julia\packages\Revise\8jqWV\src\packagedef.jl:846
┌ Error: 2024-10-27 17:10:03 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 17:14:48 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 17:14:49 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 17:14:57 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 17:14:57 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Error: 2024-10-27 17:15:43 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 17:15:49 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 17:15:52 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 17:17:14 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 17:17:16 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 17:22:32 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 17:22:33 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 17:22:40 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 17:22:40 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Error: 2024-10-27 17:23:09 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 17:24:41 Failed to revise C:\Users\renil\TCC\ForestInventory\app.jl
│   exception = Revise.ReviseEvalException("C:\\Users\\renil\\TCC\\ForestInventory\\app.jl:384", UndefVarError(:selected_dataset, Main), Any[(top-level scope at app.jl:384, 1)])
└ @ Revise C:\Users\renil\.julia\packages\Revise\8jqWV\src\packagedef.jl:733
┌ Warning: 2024-10-27 17:24:41 The running code does not match the saved version for the following files:
│ 
│   C:\Users\renil\TCC\ForestInventory\app.jl
│ 
│ If the error was due to evaluation order, it can sometimes be resolved by calling `Revise.retry()`.
│ Use Revise.errors() to report errors again. Only the first error in each file is shown.
│ Your prompt color may be yellow until the errors are resolved.
└ @ Revise C:\Users\renil\.julia\packages\Revise\8jqWV\src\packagedef.jl:846
┌ Error: 2024-10-27 17:24:45 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 17:25:29 Failed to revise C:\Users\renil\TCC\ForestInventory\app.jl
│   exception = Revise.ReviseEvalException("C:\\Users\\renil\\TCC\\ForestInventory\\app.jl:385", UndefVarError(:selected_method, Main), Any[(top-level scope at app.jl:385, 1)])
└ @ Revise C:\Users\renil\.julia\packages\Revise\8jqWV\src\packagedef.jl:733
┌ Error: 2024-10-27 17:25:32 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 17:26:51 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 17:28:15 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 17:28:16 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 17:28:23 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 17:28:23 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Error: 2024-10-27 17:29:03 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 17:29:16 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 17:29:19 ArgumentError: typeof(data) doesn't have a defined `StructTypes.StructType`
│ Stacktrace:
│   [1] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data); kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [2] write(::StructTypes.NoStructType, buf::Vector{UInt8}, pos::Int64, len::Int64, ::typeof(data))
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:93
│   [3] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [4] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{String, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147
│   [5] write(::StructTypes.DictType, buf::Vector{UInt8}, pos::Int64, len::Int64, x::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:157
│   [6] write
│     @ C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:147 [inlined]
│   [7] write(obj::Dict{Symbol, Any}; kw::@Kwargs{})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:40
│   [8] write(obj::Dict{Symbol, Any})
│     @ JSON3 C:\Users\renil\.julia\packages\JSON3\ntJon\src\write.jl:37
│   [9] vue_integration(::Type{Main_ReactiveModel}; vue_app_name::String, core_theme::Bool, debounce::Int64, transport::Module)
│     @ Stipple.Elements C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:59
│  [10] vue_integration
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\Elements.jl:52 [inlined]
│  [11] (::Stipple.var"#57#59"{Main_ReactiveModel, String, Int64, Bool, Module})()
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:667
│  [12] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [13] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [14] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [15] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [16] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [17] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [18] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [19] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [20] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [21] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [22] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [24] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [25] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [26] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [27] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [28] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [29] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [30] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [31] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [32] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [33] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 17:31:34 Failed to revise C:\Users\renil\TCC\ForestInventory\app.jl
│   exception = Revise.ReviseEvalException("C:\\Users\\renil\\TCC\\ForestInventory\\app.jl:9", ArgumentError("\"de.csv\" is not a valid file or doesn't exist"), Any[(CSV.Context(source::CSV.Arg, header::CSV.Arg, normalizenames::CSV.Arg, datarow::CSV.Arg, skipto::CSV.Arg, footerskip::CSV.Arg, transpose::CSV.Arg, comment::CSV.Arg, ignoreemptyrows::CSV.Arg, ignoreemptylines::CSV.Arg, select::CSV.Arg, drop::CSV.Arg, limit::CSV.Arg, buffer_in_memory::CSV.Arg, threaded::CSV.Arg, ntasks::CSV.Arg, tasks::CSV.Arg, rows_to_check::CSV.Arg, lines_to_check::CSV.Arg, missingstrings::CSV.Arg, missingstring::CSV.Arg, delim::CSV.Arg, ignorerepeated::CSV.Arg, quoted::CSV.Arg, quotechar::CSV.Arg, openquotechar::CSV.Arg, closequotechar::CSV.Arg, escapechar::CSV.Arg, dateformat::CSV.Arg, dateformats::CSV.Arg, decimal::CSV.Arg, groupmark::CSV.Arg, truestrings::CSV.Arg, falsestrings::CSV.Arg, stripwhitespace::CSV.Arg, type::CSV.Arg, types::CSV.Arg, typemap::CSV.Arg, pool::CSV.Arg, downcast::CSV.Arg, lazystrings::CSV.Arg, stringtype::CSV.Arg, strict::CSV.Arg, silencewarnings::CSV.Arg, maxwarnings::CSV.Arg, debug::CSV.Arg, parsingdebug::CSV.Arg, validate::CSV.Arg, streaming::CSV.Arg) at context.jl:314, 1), (#File#32 at file.jl:222 [inlined], 1), (CSV.File(source::String) at file.jl:162, 1), (read(source::String, sink::Type; copycols::Bool, kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}) at CSV.jl:117, 1), (read(source::String, sink::Type) at CSV.jl:113, 1), (top-level scope at app.jl:9, 1)])
└ @ Revise C:\Users\renil\.julia\packages\Revise\8jqWV\src\packagedef.jl:733
┌ Warning: 2024-10-27 17:31:34 The running code does not match the saved version for the following files:
│ 
│   C:\Users\renil\TCC\ForestInventory\app.jl
│ 
│ If the error was due to evaluation order, it can sometimes be resolved by calling `Revise.retry()`.
│ Use Revise.errors() to report errors again. Only the first error in each file is shown.
│ Your prompt color may be yellow until the errors are resolved.
└ @ Revise C:\Users\renil\.julia\packages\Revise\8jqWV\src\packagedef.jl:846
┌ Info: 2024-10-27 17:33:44 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 17:33:46 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 17:33:58 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 17:33:58 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Info: 2024-10-27 19:48:14 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 19:48:43 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 19:49:11 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 19:51:13 uploaded
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:72
┌ Info: 2024-10-27 19:51:18 Arquivo importado: 
│   fileuploads = Dict{AbstractString, AbstractString}("name" => "Strand.xlsx", "channel" => "FUFEHNGPPIXTVQHUSTBTZNSGMEPFFIIK", "path" => "C:\\Users\\renil\\AppData\\Local\\Temp\\jl_peFmpp\\jl_61F4.tmp")
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:55
┌ Info: 2024-10-27 19:51:19 uploaded
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:72
┌ Info: 2024-10-27 19:51:58 Arquivo importado: 
│   fileuploads = Dict{AbstractString, AbstractString}("name" => "Strand.csv", "channel" => "FUFEHNGPPIXTVQHUSTBTZNSGMEPFFIIK", "path" => "C:\\Users\\renil\\AppData\\Local\\Temp\\jl_CCo1ok\\jl_29A.tmp")
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:55
┌ Info: 2024-10-27 19:51:58 uploaded
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:72
┌ Info: 2024-10-27 19:52:21 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 19:52:41 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 19:54:08 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 19:55:15 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 19:55:51 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#61":
│  [1] (::var"#61#67")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1068
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Strange
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006fe0)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006fe0), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x00000289884b8cea, Ptr{Nothing} @0x00000289884ba057, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988499dfa, Ptr{Nothing} @0x000002898849b813, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x0000028988495357, Ptr{Nothing} @0x0000028988439e67, Ptr{Nothing} @0x000002898843a2bb, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Error: 2024-10-27 19:56:49 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#61":
│  [1] (::var"#61#67")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1068
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Bitterlich
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006fe6)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006fe6), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x00000289884b8cea, Ptr{Nothing} @0x00000289884ba057, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988499dfa, Ptr{Nothing} @0x000002898849b813, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x0000028988495357, Ptr{Nothing} @0x0000028988439e67, Ptr{Nothing} @0x000002898843a2bb, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Error: 2024-10-27 19:56:51 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#61":
│  [1] (::var"#61#67")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1068
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Strange
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006fec)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006fec), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x00000289884b8cea, Ptr{Nothing} @0x00000289884ba057, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988499dfa, Ptr{Nothing} @0x000002898849b813, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x0000028988495357, Ptr{Nothing} @0x0000028988439e67, Ptr{Nothing} @0x000002898843a2bb, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Error: 2024-10-27 19:56:58 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#61":
│  [1] (::var"#61#67")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1068
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Área Fixa
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006ff2)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006ff2), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x00000289884b8cea, Ptr{Nothing} @0x00000289884ba057, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988499dfa, Ptr{Nothing} @0x000002898849b813, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x0000028988495357, Ptr{Nothing} @0x0000028988439e67, Ptr{Nothing} @0x000002898843a2bb, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Error: 2024-10-27 19:57:00 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#61":
│  [1] (::var"#61#67")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1068
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Strange
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006ff8)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006ff8), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x00000289884b8cea, Ptr{Nothing} @0x00000289884ba057, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988499dfa, Ptr{Nothing} @0x000002898849b813, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x0000028988495357, Ptr{Nothing} @0x0000028988439e67, Ptr{Nothing} @0x000002898843a2bb, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Info: 2024-10-27 19:57:16 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 19:57:36 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#271":
│  [1] (::var"#271#277")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:795
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Bitterlich
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x00000000000070bf)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x00000000000070bf), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x0000028988021b6a, Ptr{Nothing} @0x0000028988022ed7, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000002898801a32a, Ptr{Nothing} @0x000002898801bd43, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x00000289880165f7, Ptr{Nothing} @0x0000028988008f17, Ptr{Nothing} @0x000002898800936b, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Error: 2024-10-27 19:57:38 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#271":
│  [1] (::var"#271#277")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:795
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Strange
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x00000000000070c5)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x00000000000070c5), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x0000028988021b6a, Ptr{Nothing} @0x0000028988022ed7, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000002898801a32a, Ptr{Nothing} @0x000002898801bd43, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x00000289880165f7, Ptr{Nothing} @0x0000028988008f17, Ptr{Nothing} @0x000002898800936b, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Info: 2024-10-27 19:57:44 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 19:57:50 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#271":
│  [1] (::var"#271#277")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:795
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Prodan
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x000000000000715d)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x000000000000715d), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x0000028988021b6a, Ptr{Nothing} @0x0000028988022ed7, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000002898801a32a, Ptr{Nothing} @0x000002898801bd43, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x00000289880165f7, Ptr{Nothing} @0x0000028988008f17, Ptr{Nothing} @0x000002898800936b, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Error: 2024-10-27 19:57:52 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#271":
│  [1] (::var"#271#277")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:795
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Strange
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000007163)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000007163), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x00000289884dbe75, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000002898849ba81, Ptr{Nothing} @0x0000028988021b6a, Ptr{Nothing} @0x0000028988022ed7, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000002898801a32a, Ptr{Nothing} @0x000002898801bd43, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00000289884955bc, Ptr{Nothing} @0x00000289884960dc, Ptr{Nothing} @0x000002898849613b, Ptr{Nothing} @0x00000289880165f7, Ptr{Nothing} @0x0000028988008f17, Ptr{Nothing} @0x000002898800936b, Ptr{Nothing} @0x000002898813282f, Ptr{Nothing} @0x0000028988132d95, Ptr{Nothing} @0x0000028988132e85, Ptr{Nothing} @0x0000028988132ec0, Ptr{Nothing} @0x000002898810c704, Ptr{Nothing} @0x000002898810c76b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000002898810b6b3, Ptr{Nothing} @0x000002898810b7d3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x0000028988106061, Ptr{Nothing} @0x000002898810877e, Ptr{Nothing} @0x0000028988108c4b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Info: 2024-10-27 19:59:57 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 19:59:59 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:00:09 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 20:00:10 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Error: 2024-10-27 20:01:09 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#61":
│  [1] (::var"#61#67")(selected_method)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1068
│   Core.CodeInfo[CodeInfo(
│ 1 ── %1   = selected_method === "Área Fixa"
│ └───        goto #3 if not %1
│ 2 ──        goto #4
│ 3 ── %4   = selected_method === ""
│ └───        goto #5 if not %4
│ 4 ┄─ %6   = true
│ │    %7   = Core.getfield(#self#, :__model__)
│ │    %8   = Base.getproperty(%7, :selected_process_visibility)
│ │           Base.setindex!(%8, %6)
│ │    %10  = false
│ │    %11  = Core.getfield(#self#, :__model__)
│ │    %12  = Base.getproperty(%11, :fab_visibility)
│ │           Base.setindex!(%12, %10)
│ │    %14  = false
│ │    %15  = Core.getfield(#self#, :__model__)
│ │    %16  = Base.getproperty(%15, :selected_dataset_visibility)
│ │           Base.setindex!(%16, %14)
│ │    %18  = false
│ │    %19  = Core.getfield(#self#, :__model__)
│ │    %20  = Base.getproperty(%19, :plot_area_visibility)
│ │           Base.setindex!(%20, %18)
│ │    %22  = false
│ │    %23  = Core.getfield(#self#, :__model__)
│ │    %24  = Base.getproperty(%23, :n_potencial_visibility)
│ │           Base.setindex!(%24, %22)
│ │    %26  = false
│ │    %27  = Core.getfield(#self#, :__model__)
│ │    %28  = Base.getproperty(%27, :selected_dap_column_visibility)
│ │           Base.setindex!(%28, %26)
│ │    %30  = false
│ │    %31  = Core.getfield(#self#, :__model__)
│ │    %32  = Base.getproperty(%31, :selected_distance_column_visibility)
│ │           Base.setindex!(%32, %30)
│ │    %34  = false
│ │    %35  = Core.getfield(#self#, :__model__)
│ │    %36  = Base.getproperty(%35, :selected_vol_column_visibility)
│ │           Base.setindex!(%36, %34)
│ │    %38  = false
│ │    %39  = Core.getfield(#self#, :__model__)
│ │    %40  = Base.getproperty(%39, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%40, %38)
│ │    %42  = false
│ │    %43  = Core.getfield(#self#, :__model__)
│ │    %44  = Base.getproperty(%43, :Distância_visibility)
│ │           Base.setindex!(%44, %42)
│ │    %46  = false
│ │    %47  = Core.getfield(#self#, :__model__)
│ │    %48  = Base.getproperty(%47, :selected_estrato_visibility)
│ │           Base.setindex!(%48, %46)
│ │    %50  = false
│ │    %51  = Core.getfield(#self#, :__model__)
│ │    %52  = Base.getproperty(%51, :selected_subestrato_visibility)
│ │           Base.setindex!(%52, %50)
│ └───        goto #13
│ 5 ── %55  = selected_method === "Bitterlich"
│ └───        goto #7 if not %55
│ 6 ── %57  = false
│ │    %58  = Core.getfield(#self#, :__model__)
│ │    %59  = Base.getproperty(%58, :selected_unit_visibility)
│ │           Base.setindex!(%59, %57)
│ │    %61  = false
│ │    %62  = Core.getfield(#self#, :__model__)
│ │    %63  = Base.getproperty(%62, :selected_variable_visibility)
│ │           Base.setindex!(%63, %61)
│ │    %65  = false
│ │    %66  = Core.getfield(#self#, :__model__)
│ │    %67  = Base.getproperty(%66, :selected_process_visibility)
│ │           Base.setindex!(%67, %65)
│ │    %69  = true
│ │    %70  = Core.getfield(#self#, :__model__)
│ │    %71  = Base.getproperty(%70, :selected_dataset_visibility)
│ │           Base.setindex!(%71, %69)
│ │    %73  = false
│ │    %74  = Core.getfield(#self#, :__model__)
│ │    %75  = Base.getproperty(%74, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%75, %73)
│ │    %77  = false
│ │    %78  = Core.getfield(#self#, :__model__)
│ │    %79  = Base.getproperty(%78, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%79, %77)
│ │    %81  = false
│ │    %82  = Core.getfield(#self#, :__model__)
│ │    %83  = Base.getproperty(%82, :selected_occasion_visibility)
│ │           Base.setindex!(%83, %81)
│ │    %85  = false
│ │    %86  = Core.getfield(#self#, :__model__)
│ │    %87  = Base.getproperty(%86, :plot_area_visibility)
│ │           Base.setindex!(%87, %85)
│ │    %89  = false
│ │    %90  = Core.getfield(#self#, :__model__)
│ │    %91  = Base.getproperty(%90, :inventoried_area_visibility)
│ │           Base.setindex!(%91, %89)
│ │    %93  = false
│ │    %94  = Core.getfield(#self#, :__model__)
│ │    %95  = Base.getproperty(%94, :ear_visibility)
│ │           Base.setindex!(%95, %93)
│ │    %97  = false
│ │    %98  = Core.getfield(#self#, :__model__)
│ │    %99  = Base.getproperty(%98, :alpha_visibility)
│ │           Base.setindex!(%99, %97)
│ │    %101 = true
│ │    %102 = Core.getfield(#self#, :__model__)
│ │    %103 = Base.getproperty(%102, :fab_visibility)
│ │           Base.setindex!(%103, %101)
│ │    %105 = true
│ │    %106 = Core.getfield(#self#, :__model__)
│ │    %107 = Base.getproperty(%106, :selected_dap_column_visibility)
│ │           Base.setindex!(%107, %105)
│ │    %109 = true
│ │    %110 = Core.getfield(#self#, :__model__)
│ │    %111 = Base.getproperty(%110, :selected_distance_column_visibility)
│ │           Base.setindex!(%111, %109)
│ │    %113 = true
│ │    %114 = Core.getfield(#self#, :__model__)
│ │    %115 = Base.getproperty(%114, :selected_vol_column_visibility)
│ │           Base.setindex!(%115, %113)
│ │    %117 = true
│ │    %118 = Core.getfield(#self#, :__model__)
│ │    %119 = Base.getproperty(%118, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%119, %117)
│ │    %121 = false
│ │    %122 = Core.getfield(#self#, :__model__)
│ │    %123 = Base.getproperty(%122, :Distância_visibility)
│ │           Base.setindex!(%123, %121)
│ │    %125 = false
│ │    %126 = Core.getfield(#self#, :__model__)
│ │    %127 = Base.getproperty(%126, :selected_estrato_visibility)
│ │           Base.setindex!(%127, %125)
│ │    %129 = false
│ │    %130 = Core.getfield(#self#, :__model__)
│ │    %131 = Base.getproperty(%130, :selected_subestrato_visibility)
│ │           Base.setindex!(%131, %129)
│ └───        goto #13
│ 7 ── %134 = selected_method === "Prodan"
│ └───        goto #9 if not %134
│ 8 ── %136 = false
│ │    %137 = Core.getfield(#self#, :__model__)
│ │    %138 = Base.getproperty(%137, :selected_unit_visibility)
│ │           Base.setindex!(%138, %136)
│ │    %140 = false
│ │    %141 = Core.getfield(#self#, :__model__)
│ │    %142 = Base.getproperty(%141, :selected_variable_visibility)
│ │           Base.setindex!(%142, %140)
│ │    %144 = false
│ │    %145 = Core.getfield(#self#, :__model__)
│ │    %146 = Base.getproperty(%145, :selected_process_visibility)
│ │           Base.setindex!(%146, %144)
│ │    %148 = true
│ │    %149 = Core.getfield(#self#, :__model__)
│ │    %150 = Base.getproperty(%149, :selected_dataset_visibility)
│ │           Base.setindex!(%150, %148)
│ │    %152 = false
│ │    %153 = Core.getfield(#self#, :__model__)
│ │    %154 = Base.getproperty(%153, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%154, %152)
│ │    %156 = false
│ │    %157 = Core.getfield(#self#, :__model__)
│ │    %158 = Base.getproperty(%157, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%158, %156)
│ │    %160 = false
│ │    %161 = Core.getfield(#self#, :__model__)
│ │    %162 = Base.getproperty(%161, :selected_occasion_visibility)
│ │           Base.setindex!(%162, %160)
│ │    %164 = false
│ │    %165 = Core.getfield(#self#, :__model__)
│ │    %166 = Base.getproperty(%165, :plot_area_visibility)
│ │           Base.setindex!(%166, %164)
│ │    %168 = false
│ │    %169 = Core.getfield(#self#, :__model__)
│ │    %170 = Base.getproperty(%169, :inventoried_area_visibility)
│ │           Base.setindex!(%170, %168)
│ │    %172 = false
│ │    %173 = Core.getfield(#self#, :__model__)
│ │    %174 = Base.getproperty(%173, :ear_visibility)
│ │           Base.setindex!(%174, %172)
│ │    %176 = false
│ │    %177 = Core.getfield(#self#, :__model__)
│ │    %178 = Base.getproperty(%177, :alpha_visibility)
│ │           Base.setindex!(%178, %176)
│ │    %180 = false
│ │    %181 = Core.getfield(#self#, :__model__)
│ │    %182 = Base.getproperty(%181, :fab_visibility)
│ │           Base.setindex!(%182, %180)
│ │    %184 = true
│ │    %185 = Core.getfield(#self#, :__model__)
│ │    %186 = Base.getproperty(%185, :selected_dap_column_visibility)
│ │           Base.setindex!(%186, %184)
│ │    %188 = false
│ │    %189 = Core.getfield(#self#, :__model__)
│ │    %190 = Base.getproperty(%189, :selected_distance_column_visibility)
│ │           Base.setindex!(%190, %188)
│ │    %192 = true
│ │    %193 = Core.getfield(#self#, :__model__)
│ │    %194 = Base.getproperty(%193, :selected_vol_column_visibility)
│ │           Base.setindex!(%194, %192)
│ │    %196 = false
│ │    %197 = Core.getfield(#self#, :__model__)
│ │    %198 = Base.getproperty(%197, :selected_num_arvores_column_visibility)
│ │           Base.setindex!(%198, %196)
│ │    %200 = true
│ │    %201 = Core.getfield(#self#, :__model__)
│ │    %202 = Base.getproperty(%201, :Distância_visibility)
│ │           Base.setindex!(%202, %200)
│ │    %204 = false
│ │    %205 = Core.getfield(#self#, :__model__)
│ │    %206 = Base.getproperty(%205, :selected_estrato_visibility)
│ │           Base.setindex!(%206, %204)
│ │    %208 = false
│ │    %209 = Core.getfield(#self#, :__model__)
│ │    %210 = Base.getproperty(%209, :selected_subestrato_visibility)
│ │           Base.setindex!(%210, %208)
│ └───        goto #13
│ 9 ── %213 = selected_method === "Strand"
│ └───        goto #11 if not %213
│ 10 ─ %215 = false
│ │    %216 = Core.getfield(#self#, :__model__)
│ │    %217 = Base.getproperty(%216, :selected_unit_visibility)
│ │           Base.setindex!(%217, %215)
│ │    %219 = false
│ │    %220 = Core.getfield(#self#, :__model__)
│ │    %221 = Base.getproperty(%220, :selected_variable_visibility)
│ │           Base.setindex!(%221, %219)
│ │    %223 = false
│ │    %224 = Core.getfield(#self#, :__model__)
│ │    %225 = Base.getproperty(%224, :selected_process_visibility)
│ │           Base.setindex!(%225, %223)
│ │    %227 = true
│ │    %228 = Core.getfield(#self#, :__model__)
│ │    %229 = Base.getproperty(%228, :selected_dataset_visibility)
│ │           Base.setindex!(%229, %227)
│ │    %231 = false
│ │    %232 = Core.getfield(#self#, :__model__)
│ │    %233 = Base.getproperty(%232, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%233, %231)
│ │    %235 = false
│ │    %236 = Core.getfield(#self#, :__model__)
│ │    %237 = Base.getproperty(%236, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%237, %235)
│ │    %239 = false
│ │    %240 = Core.getfield(#self#, :__model__)
│ │    %241 = Base.getproperty(%240, :selected_occasion_visibility)
│ │           Base.setindex!(%241, %239)
│ │    %243 = true
│ │    %244 = Core.getfield(#self#, :__model__)
│ │    %245 = Base.getproperty(%244, :plot_area_visibility)
│ │           Base.setindex!(%245, %243)
│ │    %247 = false
│ │    %248 = Core.getfield(#self#, :__model__)
│ │    %249 = Base.getproperty(%248, :inventoried_area_visibility)
│ │           Base.setindex!(%249, %247)
│ │    %251 = false
│ │    %252 = Core.getfield(#self#, :__model__)
│ │    %253 = Base.getproperty(%252, :ear_visibility)
│ │           Base.setindex!(%253, %251)
│ │    %255 = false
│ │    %256 = Core.getfield(#self#, :__model__)
│ │    %257 = Base.getproperty(%256, :alpha_visibility)
│ │           Base.setindex!(%257, %255)
│ │    %259 = true
│ │    %260 = Core.getfield(#self#, :__model__)
│ │    %261 = Base.getproperty(%260, :fab_visibility)
│ │           Base.setindex!(%261, %259)
│ │    %263 = false
│ │    %264 = Core.getfield(#self#, :__model__)
│ │    %265 = Base.getproperty(%264, :selected_estrato_visibility)
│ │           Base.setindex!(%265, %263)
│ │    %267 = false
│ │    %268 = Core.getfield(#self#, :__model__)
│ │    %269 = Base.getproperty(%268, :selected_subestrato_visibility)
│ │           Base.setindex!(%269, %267)
│ └───        goto #13
│ 11 ─ %272 = selected_method === "3P"
│ └───        goto #13 if not %272
│ 12 ─ %274 = false
│ │    %275 = Core.getfield(#self#, :__model__)
│ │    %276 = Base.getproperty(%275, :selected_unit_visibility)
│ │           Base.setindex!(%276, %274)
│ │    %278 = false
│ │    %279 = Core.getfield(#self#, :__model__)
│ │    %280 = Base.getproperty(%279, :selected_variable_visibility)
│ │           Base.setindex!(%280, %278)
│ │    %282 = false
│ │    %283 = Core.getfield(#self#, :__model__)
│ │    %284 = Base.getproperty(%283, :selected_process_visibility)
│ │           Base.setindex!(%284, %282)
│ │    %286 = true
│ │    %287 = Core.getfield(#self#, :__model__)
│ │    %288 = Base.getproperty(%287, :selected_dataset_visibility)
│ │           Base.setindex!(%288, %286)
│ │    %290 = false
│ │    %291 = Core.getfield(#self#, :__model__)
│ │    %292 = Base.getproperty(%291, :selected_unit_dropbox_visibility)
│ │           Base.setindex!(%292, %290)
│ │    %294 = false
│ │    %295 = Core.getfield(#self#, :__model__)
│ │    %296 = Base.getproperty(%295, :selected_subunit_dropbox_visibility)
│ │           Base.setindex!(%296, %294)
│ │    %298 = false
│ │    %299 = Core.getfield(#self#, :__model__)
│ │    %300 = Base.getproperty(%299, :selected_occasion_visibility)
│ │           Base.setindex!(%300, %298)
│ │    %302 = true
│ │    %303 = Core.getfield(#self#, :__model__)
│ │    %304 = Base.getproperty(%303, :plot_area_visibility)
│ │           Base.setindex!(%304, %302)
│ │    %306 = false
│ │    %307 = Core.getfield(#self#, :__model__)
│ │    %308 = Base.getproperty(%307, :inventoried_area_visibility)
│ │           Base.setindex!(%308, %306)
│ │    %310 = false
│ │    %311 = Core.getfield(#self#, :__model__)
│ │    %312 = Base.getproperty(%311, :ear_visibility)
│ │           Base.setindex!(%312, %310)
│ │    %314 = false
│ │    %315 = Core.getfield(#self#, :__model__)
│ │    %316 = Base.getproperty(%315, :alpha_visibility)
│ │           Base.setindex!(%316, %314)
│ │    %318 = true
│ │    %319 = Core.getfield(#self#, :__model__)
│ │    %320 = Base.getproperty(%319, :fab_visibility)
│ │           Base.setindex!(%320, %318)
│ │    %322 = false
│ │    %323 = Core.getfield(#self#, :__model__)
│ │    %324 = Base.getproperty(%323, :selected_estrato_visibility)
│ │           Base.setindex!(%324, %322)
│ │    %326 = false
│ │    %327 = Core.getfield(#self#, :__model__)
│ │    %328 = Base.getproperty(%327, :selected_subestrato_visibility)
│ └───        Base.setindex!(%328, %326)
│ 13 ┄ %330 = ""
│ │    %331 = ""
│ │    %332 = ""
│ │    %333 = ""
│ │    %334 = ""
│ │    %335 = ""
│ │    %336 = ""
│ │    %337 = ""
│ │    %338 = Core.getfield(#self#, :__model__)
│ │    %339 = Base.getproperty(%338, :selected_process)
│ │           Base.setindex!(%339, %330)
│ │    %341 = Core.getfield(#self#, :__model__)
│ │    %342 = Base.getproperty(%341, :selected_unit)
│ │           Base.setindex!(%342, %331)
│ │    %344 = Core.getfield(#self#, :__model__)
│ │    %345 = Base.getproperty(%344, :selected_dataset)
│ │           Base.setindex!(%345, %332)
│ │    %347 = Core.getfield(#self#, :__model__)
│ │    %348 = Base.getproperty(%347, :selected_variable)
│ │           Base.setindex!(%348, %333)
│ │    %350 = Core.getfield(#self#, :__model__)
│ │    %351 = Base.getproperty(%350, :plot_area)
│ │           Base.setindex!(%351, %334)
│ │    %353 = Core.getfield(#self#, :__model__)
│ │    %354 = Base.getproperty(%353, :inventoried_area)
│ │           Base.setindex!(%354, %335)
│ │    %356 = Core.getfield(#self#, :__model__)
│ │    %357 = Base.getproperty(%356, :ear)
│ │           Base.setindex!(%357, %336)
│ │    %359 = Core.getfield(#self#, :__model__)
│ │    %360 = Base.getproperty(%359, :alpha)
│ │           Base.setindex!(%360, %337)
│ │    %362 = Core.tuple(%330, %331, %332, %333, %334, %335, %336, %337)
│ └───        return %362
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Strand
│ 
│   Exception:
│   MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006b1c)
│ 
│   exception = (MethodError(convert, (String, ["I", "II", "III", "IV", "V", "VI"]), 0x0000000000006b1c), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x000001ce8405ead5, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000001ce84036011, Ptr{Nothing} @0x000001ce8403ba6a, Ptr{Nothing} @0x000001ce8403cdd7, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000001ce8401c91a, Ptr{Nothing} @0x000001ce8401e333, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000001ce8401803c, Ptr{Nothing} @0x000001ce84018b5c, Ptr{Nothing} @0x000001ce84018bbb, Ptr{Nothing} @0x000001ce84017dd7, Ptr{Nothing} @0x000001ce83fe50d7, Ptr{Nothing} @0x000001ce83fe552b, Ptr{Nothing} @0x000001ce9b67b50f, Ptr{Nothing} @0x000001ce9b67ba75, Ptr{Nothing} @0x000001ce9b67bb65, Ptr{Nothing} @0x000001ce9b67bba0, Ptr{Nothing} @0x000001ce9b6553e4, Ptr{Nothing} @0x000001ce9b65544b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000001ce9b651e73, Ptr{Nothing} @0x000001ce9b651f93, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000001ce9b64c481, Ptr{Nothing} @0x000001ce9b64ef3e, Ptr{Nothing} @0x000001ce9b64f40b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Error: 2024-10-27 20:01:11 
│ Error attempting to invoke handler.
│ 
│   Handler:
│   # 1 method for anonymous function "#60":
│  [1] (::var"#60#66")(selected_dataset)
│      @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1068
│   Core.CodeInfo[CodeInfo(
│ 1 ─ %1  = selected_dataset === ""
│ └──       goto #3 if not %1
│ 2 ─ %3  = Main.names
│ │   %4  = CSV.read
│ │   %5  = Main.DataFrame
│ │   %6  = (%4)("exemplo/de.csv", %5)
│ │   %7  = (%3)(%6)
│ │   %8  = Core.getfield(#self#, :__model__)
│ │   %9  = Base.getproperty(%8, :variables)
│ │         Base.setindex!(%9, %7)
│ └──       return %7
│ 3 ─ %12 = Main.names
│ │   %13 = CSV.read
│ │   %14 = Base.string("public/uploads/", selected_dataset)
│ │   %15 = Main.DataFrame
│ │   %16 = (%13)(%14, %15)
│ │   %17 = (%12)(%16)
│ │   %18 = Core.getfield(#self#, :__model__)
│ │   %19 = Base.getproperty(%18, :variables)
│ │         Base.setindex!(%19, %17)
│ │   %21 = Main.DataTable
│ │   %22 = CSV.read
│ │   %23 = Base.string("public/uploads/", selected_dataset)
│ │   %24 = Main.DataFrame
│ │   %25 = (%22)(%23, %24)
│ │   %26 = (%21)(%25)
│ │   %27 = Core.getfield(#self#, :__model__)
│ │   %28 = Base.getproperty(%27, :Table_data)
│ │         Base.setindex!(%28, %26)
│ └──       return %26
│ )]
│ 
│   Type of argument:
│   String
│ 
│   Value:
│   Strand.csv
│ 
│   Exception:
│   MethodError(convert, (String, ["ÁRVORE", "DAP (cm)"]), 0x0000000000006b22)
│ 
│   exception = (MethodError(convert, (String, ["ÁRVORE", "DAP (cm)"]), 0x0000000000006b22), Union{Ptr{Nothing}, Base.InterpreterIP}[Ptr{Nothing} @0x00007ffbc43714fc, Ptr{Nothing} @0x00007ffbc437a1e5, Ptr{Nothing} @0x00007ffbc437a3cd, Ptr{Nothing} @0x00007ffbc437d5bd, Ptr{Nothing} @0x000001ce8405ead5, Ptr{Nothing} @0x00007ffb87b6f0fa, Ptr{Nothing} @0x000001ce84036011, Ptr{Nothing} @0x000001cea2b83550, Ptr{Nothing} @0x000001cea2b835a3, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000001ce8401803c, Ptr{Nothing} @0x000001ce84018b5c, Ptr{Nothing} @0x000001ce84018bbb, Ptr{Nothing} @0x000001ce84017dd7, Ptr{Nothing} @0x000001ce83fe50d7, Ptr{Nothing} @0x000001ce83fe552b, Ptr{Nothing} @0x000001ce9b67b50f, Ptr{Nothing} @0x000001ce9b67ba75, Ptr{Nothing} @0x000001ce9b67bb65, Ptr{Nothing} @0x000001ce9b67bba0, Ptr{Nothing} @0x000001ce9b6553e4, Ptr{Nothing} @0x000001ce9b65544b, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x00007ffb87a5db00, Ptr{Nothing} @0x00007ffb87baa23d, Ptr{Nothing} @0x00007ffb87b6bf8b, Ptr{Nothing} @0x000001ce9b651e73, Ptr{Nothing} @0x000001ce9b651f93, Ptr{Nothing} @0x00007ffbc438959b, Ptr{Nothing} @0x000001ce9b64c481, Ptr{Nothing} @0x000001ce9b64ef3e, Ptr{Nothing} @0x000001ce9b64f40b, Ptr{Nothing} @0x00007ffbc43a2e03])
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\mutators.jl:54
┌ Warning: 2024-10-27 20:01:21 ArgumentError("provide a valid sink argument, like `using DataFrames; CSV.read(source, DataFrame)`")
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:1005
┌ Info: 2024-10-27 20:01:43 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 20:01:44 MethodError: Cannot `convert` an object of type String to an object of type Vector{Any}
│ The function `convert` exists, but no method is defined for this combination of argument types.
│ 
│ Closest candidates are:
│   convert(::Type{Array{S, N}}, !Matched::PooledArrays.PooledArray{T, R, N}) where {S, T, R, N}
│    @ PooledArrays C:\Users\renil\.julia\packages\PooledArrays\Vy2X0\src\PooledArrays.jl:499
│   convert(::Type{T}, !Matched::T) where T
│    @ Base Base.jl:126
│   convert(::Type{T}, !Matched::AbstractArray) where T<:Array
│    @ Base array.jl:607
│   ...
│ 
│ Stacktrace:
│   [1] setproperty!(x::Observable{Vector{Any}}, f::Symbol, v::String)
│     @ Base .\Base.jl:52
│   [2] setindex!(r::Reactive{Vector{Any}}, val::String, ::typeof(!))
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\reactivity.jl:76
│   [3] init_from_storage(t::Type{Main_ReactiveModel}; channel::String, kwargs::@Kwargs{})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:38
│   [4] init_from_storage(t::Type{Main_ReactiveModel})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:22
│   [5] top-level scope
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:768
│   [6] eval
│     @ .\boot.jl:430 [inlined]
│   [7] (::Stipple.ReactiveTools.var"#32#34"{Module, Vector{Any}})()
│     @ Stipple.ReactiveTools C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1194
│   [8] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│   [9] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [10] (::Stipple.Pages.var"#7#10"{FilePathsBase.WindowsPath, String, @Kwargs{}})()
│     @ Stipple.Pages C:\Users\renil\.julia\packages\Stipple\z5YII\src\Pages.jl:68
│  [11] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [12] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [13] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [14] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [15] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [16] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [17] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [18] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [19] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [20] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [21] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [22] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [24] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [25] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [26] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [27] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [28] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [29] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [30] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [31] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [32] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 20:02:27 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 20:02:32 MethodError: Cannot `convert` an object of type String to an object of type DataFrame
│ The function `convert` exists, but no method is defined for this combination of argument types.
│ 
│ Closest candidates are:
│   DataFrame(::Any; copycols)
│    @ DataFrames C:\Users\renil\.julia\packages\DataFrames\kcA9R\src\other\tables.jl:48
│   DataFrame(::Any, !Matched::AbstractVector; makeunique, copycols)
│    @ DataFrames C:\Users\renil\.julia\packages\DataFrames\kcA9R\src\other\tables.jl:67
│   convert(::Type{DataFrame}, !Matched::SubDataFrame)
│    @ DataFrames C:\Users\renil\.julia\packages\DataFrames\kcA9R\src\subdataframe\subdataframe.jl:319
│   ...
│ 
│ Stacktrace:
│   [1] setproperty!(x::Observable{DataFrame}, f::Symbol, v::String)
│     @ Base .\Base.jl:52
│   [2] setindex!(r::Reactive{DataFrame}, val::String, ::typeof(!))
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\reactivity.jl:76
│   [3] init_from_storage(t::Type{Main_ReactiveModel}; channel::String, kwargs::@Kwargs{})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:38
│   [4] init_from_storage(t::Type{Main_ReactiveModel})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:22
│   [5] top-level scope
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:768
│   [6] eval
│     @ .\boot.jl:430 [inlined]
│   [7] (::Stipple.ReactiveTools.var"#32#34"{Module, Vector{Any}})()
│     @ Stipple.ReactiveTools C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1194
│   [8] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│   [9] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [10] (::Stipple.Pages.var"#7#10"{FilePathsBase.WindowsPath, String, @Kwargs{}})()
│     @ Stipple.Pages C:\Users\renil\.julia\packages\Stipple\z5YII\src\Pages.jl:68
│  [11] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [12] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [13] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [14] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [15] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [16] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [17] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [18] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [19] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [20] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [21] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [22] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [24] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [25] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [26] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [27] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [28] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [29] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [30] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [31] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [32] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Error: 2024-10-27 20:02:35 MethodError: Cannot `convert` an object of type String to an object of type DataFrame
│ The function `convert` exists, but no method is defined for this combination of argument types.
│ 
│ Closest candidates are:
│   DataFrame(::Any; copycols)
│    @ DataFrames C:\Users\renil\.julia\packages\DataFrames\kcA9R\src\other\tables.jl:48
│   DataFrame(::Any, !Matched::AbstractVector; makeunique, copycols)
│    @ DataFrames C:\Users\renil\.julia\packages\DataFrames\kcA9R\src\other\tables.jl:67
│   convert(::Type{DataFrame}, !Matched::SubDataFrame)
│    @ DataFrames C:\Users\renil\.julia\packages\DataFrames\kcA9R\src\subdataframe\subdataframe.jl:319
│   ...
│ 
│ Stacktrace:
│   [1] setproperty!(x::Observable{DataFrame}, f::Symbol, v::String)
│     @ Base .\Base.jl:52
│   [2] setindex!(r::Reactive{DataFrame}, val::String, ::typeof(!))
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\reactivity.jl:76
│   [3] init_from_storage(t::Type{Main_ReactiveModel}; channel::String, kwargs::@Kwargs{})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:38
│   [4] init_from_storage(t::Type{Main_ReactiveModel})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:22
│   [5] top-level scope
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:768
│   [6] eval
│     @ .\boot.jl:430 [inlined]
│   [7] (::Stipple.ReactiveTools.var"#32#34"{Module, Vector{Any}})()
│     @ Stipple.ReactiveTools C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1194
│   [8] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│   [9] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [10] (::Stipple.Pages.var"#7#10"{FilePathsBase.WindowsPath, String, @Kwargs{}})()
│     @ Stipple.Pages C:\Users\renil\.julia\packages\Stipple\z5YII\src\Pages.jl:68
│  [11] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [12] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [13] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [14] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [15] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [16] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [17] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [18] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [19] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [20] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [21] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [22] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [24] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [25] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [26] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [27] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [28] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [29] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [30] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [31] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [32] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 20:03:21 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 20:03:27 MethodError: Cannot `convert` an object of type String to an object of type Vector{String}
│ The function `convert` exists, but no method is defined for this combination of argument types.
│ 
│ Closest candidates are:
│   convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct)
│    @ LibGit2 C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\LibGit2\src\strarray.jl:13
│   convert(::Type{Array{S, N}}, !Matched::PooledArrays.PooledArray{T, R, N}) where {S, T, R, N}
│    @ PooledArrays C:\Users\renil\.julia\packages\PooledArrays\Vy2X0\src\PooledArrays.jl:499
│   convert(::Type{T}, !Matched::T) where T
│    @ Base Base.jl:126
│   ...
│ 
│ Stacktrace:
│   [1] setproperty!(x::Observable{Vector{String}}, f::Symbol, v::String)
│     @ Base .\Base.jl:52
│   [2] setindex!(r::Reactive{Vector{String}}, val::String, ::typeof(!))
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\reactivity.jl:76
│   [3] init_from_storage(t::Type{Main_ReactiveModel}; channel::String, kwargs::@Kwargs{})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:38
│   [4] init_from_storage(t::Type{Main_ReactiveModel})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:22
│   [5] top-level scope
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:768
│   [6] eval
│     @ .\boot.jl:430 [inlined]
│   [7] (::Stipple.ReactiveTools.var"#32#34"{Module, Vector{Any}})()
│     @ Stipple.ReactiveTools C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1194
│   [8] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│   [9] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [10] (::Stipple.Pages.var"#7#10"{FilePathsBase.WindowsPath, String, @Kwargs{}})()
│     @ Stipple.Pages C:\Users\renil\.julia\packages\Stipple\z5YII\src\Pages.jl:68
│  [11] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [12] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [13] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [14] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [15] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [16] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [17] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [18] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [19] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [20] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [21] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [22] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [24] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [25] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [26] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [27] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [28] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [29] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [30] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [31] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [32] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 20:05:14 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Error: 2024-10-27 20:05:22 MethodError: Cannot `convert` an object of type String to an object of type Vector{String}
│ The function `convert` exists, but no method is defined for this combination of argument types.
│ 
│ Closest candidates are:
│   convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct)
│    @ LibGit2 C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\LibGit2\src\strarray.jl:13
│   convert(::Type{Array{S, N}}, !Matched::PooledArrays.PooledArray{T, R, N}) where {S, T, R, N}
│    @ PooledArrays C:\Users\renil\.julia\packages\PooledArrays\Vy2X0\src\PooledArrays.jl:499
│   convert(::Type{T}, !Matched::T) where T
│    @ Base Base.jl:126
│   ...
│ 
│ Stacktrace:
│   [1] setproperty!(x::Observable{Vector{String}}, f::Symbol, v::String)
│     @ Base .\Base.jl:52
│   [2] setindex!(r::Reactive{Vector{String}}, val::String, ::typeof(!))
│     @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\stipple\reactivity.jl:76
│   [3] init_from_storage(t::Type{Main_ReactiveModel}; channel::String, kwargs::@Kwargs{})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:38
│   [4] init_from_storage(t::Type{Main_ReactiveModel})
│     @ Stipple.ModelStorage.Sessions C:\Users\renil\.julia\packages\Stipple\z5YII\src\ModelStorage.jl:22
│   [5] top-level scope
│     @ C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:768
│   [6] eval
│     @ .\boot.jl:430 [inlined]
│   [7] (::Stipple.ReactiveTools.var"#32#34"{Module, Vector{Any}})()
│     @ Stipple.ReactiveTools C:\Users\renil\.julia\packages\Stipple\z5YII\src\ReactiveTools.jl:1194
│   [8] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│   [9] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [10] (::Stipple.Pages.var"#7#10"{FilePathsBase.WindowsPath, String, @Kwargs{}})()
│     @ Stipple.Pages C:\Users\renil\.julia\packages\Stipple\z5YII\src\Pages.jl:68
│  [11] run_route(r::Genie.Router.Route)
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:547
│  [12] route_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Router C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:172
│  [13] route_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Router.jl:147 [inlined]
│  [14] handle_request(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:300
│  [15] handle_request
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:292 [inlined]
│  [16] (::Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response})()
│     @ Genie.Server C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\macros.jl:123
│  [17] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [18] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [19] #153
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:425 [inlined]
│  [20] run_work_thunk(thunk::Distributed.var"#153#154"{Genie.Server.var"#27#28"{HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}}, HTTP.Messages.Request, HTTP.Messages.Response}, Tuple{}, @Kwargs{}}, print_error::Bool)
│     @ Distributed C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\process_messages.jl:70
│  [21] #remotecall_fetch#158
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:450 [inlined]
│  [22] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:449 [inlined]
│  [23] remotecall_fetch
│     @ C:\Users\renil\AppData\Local\Programs\Julia-1.11.1\share\julia\stdlib\v1.11\Distributed\src\remotecall.jl:492 [inlined]
│  [24] setup_http_listener(req::HTTP.Messages.Request, res::HTTP.Messages.Response; stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:344
│  [25] setup_http_listener (repeats 2 times)
│     @ C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:342 [inlined]
│  [26] (::Genie.Server.var"#24#25"{typeof(Genie.Server.setup_http_listener)})(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:313
│  [27] setup_http_streamer(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:333
│  [28] (::Genie.Server.var"#6#12")(stream::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.Connections.Connection{Sockets.TCPSocket}})
│     @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:124
│  [29] #invokelatest#2
│     @ .\essentials.jl:1055 [inlined]
│  [30] invokelatest
│     @ .\essentials.jl:1052 [inlined]
│  [31] handle_connection(f::Function, c::HTTP.Connections.Connection{Sockets.TCPSocket}, listener::HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, readtimeout::Int64, access_log::Nothing)
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:469
│  [32] (::HTTP.Servers.var"#16#17"{Genie.Server.var"#6#12", HTTP.Servers.Listener{Nothing, Sockets.TCPServer}, Set{HTTP.Connections.Connection}, Int64, Nothing, ReentrantLock, Base.Semaphore, HTTP.Connections.Connection{Sockets.TCPSocket}})()
│     @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:401
│ 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:356
┌ Info: 2024-10-27 20:08:10 Watching ["C:\\Users\\renil\\TCC\\ForestInventory"]
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:19
┌ Info: 2024-10-27 20:08:11 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:08:51 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Info: 2024-10-27 20:08:51 Listening on: 127.0.0.1:8000, thread id: 1
└ @ HTTP.Servers C:\Users\renil\.julia\packages\HTTP\sJD5V\src\Servers.jl:382
┌ Info: 2024-10-27 20:10:23 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Warning: 2024-10-27 20:10:53 ArgumentError("provide a valid sink argument, like `using DataFrames; CSV.read(source, DataFrame)`")
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:1005
┌ Info: 2024-10-27 20:11:35 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:11:49 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Warning: 2024-10-27 20:12:14 MethodError(sqrt, ("2",), 0x0000000000006dcc)
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:1005
┌ Info: 2024-10-27 20:12:23 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:12:29 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:12:45 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:16:12 uploaded
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:72
┌ Info: 2024-10-27 20:16:23 Arquivo importado: 
│   fileuploads = Dict{AbstractString, AbstractString}("name" => "Strand2.csv", "channel" => "JZDMXWXOSPTEQILBQFKCVULUDHAWPCUM", "path" => "C:\\Users\\renil\\AppData\\Local\\Temp\\jl_Zw5MHH\\jl_590B.tmp")
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:55
┌ Info: 2024-10-27 20:16:24 uploaded
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:72
┌ Info: 2024-10-27 20:17:10 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:18:18 Arquivo importado: 
│   fileuploads = Dict{AbstractString, AbstractString}("name" => "Strand3.csv", "channel" => "JZDMXWXOSPTEQILBQFKCVULUDHAWPCUM", "path" => "C:\\Users\\renil\\AppData\\Local\\Temp\\jl_EEDg6F\\jl_1BFA.tmp")
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:55
┌ Info: 2024-10-27 20:18:18 uploaded
└ @ Main C:\Users\renil\TCC\ForestInventory\app.jl:72
┌ Info: 2024-10-27 20:18:32 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:18:51 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:23:04 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:25:05 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:25:14 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:25:17 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:25:30 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:25:49 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Warning: 2024-10-27 20:25:53 UndefVarError(:L, Main.Strand)
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:1005
┌ Info: 2024-10-27 20:26:18 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:26:23 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-27 20:27:46 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:09:33 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:10:06 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:10:32 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:14:07 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:14:11 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:14:16 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:14:19 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:14:47 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-28 09:15:17 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-29 08:36:59 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-29 08:37:07 
│ Web Server starting at http://127.0.0.1:8000 
└ @ Genie.Server C:\Users\renil\.julia\packages\Genie\A612O\src\Server.jl:182
┌ Warning: 2024-10-29 08:38:03 UndefVarError(:DataFrame, Main.Strand)
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:1005
┌ Info: 2024-10-29 08:38:12 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Warning: 2024-10-29 08:38:16 UndefVarError(:DataFrame, Main.Strand)
└ @ Stipple C:\Users\renil\.julia\packages\Stipple\z5YII\src\Stipple.jl:1005
┌ Info: 2024-10-29 08:38:30 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-29 08:38:52 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
┌ Info: 2024-10-29 08:40:01 Autoreloading
└ @ GenieAutoReload C:\Users\renil\.julia\packages\GenieAutoReload\ESvsh\src\GenieAutoReload.jl:22
